{"version":3,"sources":["App.jsx","index.jsx"],"names":["App","useState","users","setUsers","posts","setPosts","comments","setComments","useEffect","a","fetch","basicData","json","cleanData","getPosts","evt","target","dataset","id","data","getComments","className","map","user","onClick","name","href","email","address","company","post","title","userId","body","comment","postId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NA4GeA,MAvGf,WACI,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEAC,oBAAS,sBAAC,8BAAAC,EAAA,sEACkBC,MAAM,8CADxB,cACAC,EADA,gBAEkBA,EAAUC,OAF5B,OAEAC,EAFA,OAGNV,EAASU,GAHH,4CAMV,IAAMC,EAAQ,uCAAE,WAAOC,GAAP,iBAAAN,EAAA,sEACOC,MAAM,qDAAD,OAAsDK,EAAIC,OAAOC,QAAQC,KADrF,cACNC,EADM,gBAEYA,EAAKP,OAFjB,OAENC,EAFM,OAGZR,EAASQ,GAHG,2CAAF,sDAMRO,EAAW,uCAAE,WAAOL,GAAP,iBAAAN,EAAA,sEACKC,MAAM,8CAAD,OAA+CK,EAAIC,OAAOC,QAAQC,GAAlE,cADV,cACTC,EADS,gBAESA,EAAKP,OAFd,OAETC,EAFS,OAGfN,EAAYM,GAHG,2CAAF,sDAMjB,OACI,qCACI,oBAAIQ,UAAU,sBAAd,uBACA,sBAAKA,UAAU,iDAAf,UAEI,sBAAKA,UAAU,QAAf,UACI,oBAAIA,UAAU,SAAd,mBACA,mBAAGA,UAAU,sBAAb,8BACA,oBAAIA,UAAU,gBAAd,SACKnB,EAAMoB,KAAI,SAACC,GAAD,OACP,qBAAIF,UAAU,8DAAd,UACI,mBAAGA,UAAU,0BAA0B,UAASE,EAAKL,GAAIM,QAASV,EAAlE,SAA6ES,EAAKE,OAClF,gCACI,sBAAMJ,UAAU,UAAhB,qBACA,mBAAGA,UAAU,cAAcK,KAAK,GAAhC,SAAoCH,EAAKI,WAE7C,gCACI,sBAAMN,UAAU,UAAhB,uBACA,sBAAMA,UAAU,gBAAhB,SAAiCE,EAAKK,QAAL,UAErC,gCACI,sBAAMP,UAAU,UAAhB,uBACA,sBAAMA,UAAU,gBAAhB,SAAiCE,EAAKM,QAAL,qBAOrD,sBAAKR,UAAU,0DAAf,UACI,oBAAIA,UAAU,SAAd,mBACA,mBAAGA,UAAU,sBAAb,yBACA,oBAAIA,UAAU,kCAAd,SACKjB,EAAMkB,KAAI,SAACQ,GAAD,OACP,qBAAIT,UAAU,gDAAd,UACI,mBAAGA,UAAU,2BAA2B,UAASS,EAAKZ,GAAIM,QAASJ,EAAnE,SAAiFU,EAAKC,QACtF,gCACI,sBAAMV,UAAU,UAAhB,sBACA,sBAAMA,UAAU,WAAhB,SAA4BS,EAAKE,YAErC,gCACI,sBAAMX,UAAU,UAAhB,oBACA,sBAAMA,UAAU,aAAhB,SAA8BS,EAAKG,qBAOvD,sBAAKZ,UAAU,QAAf,UACI,oBAAIA,UAAU,SAAd,sBACA,mBAAGA,UAAU,yBAAb,yBACA,oBAAIA,UAAU,iCAAd,SACKf,EAASgB,KAAI,SAACY,GAAD,OACV,qBAAIb,UAAU,gDAAd,UACI,gCACI,sBAAMA,UAAU,UAAhB,qBACA,sBAAMA,UAAU,gBAAhB,SAAiCa,EAAQT,UAE7C,gCACI,sBAAMJ,UAAU,UAAhB,sBACA,+BAAOa,EAAQC,YAEnB,gCACI,sBAAMd,UAAU,UAAhB,qBACA,mBAAGK,KAAK,GAAR,SAAYQ,EAAQP,WAExB,gCACI,sBAAMN,UAAU,UAAhB,oBACA,+BAAOa,EAAQD,4BC5FnDG,IAASC,OACP,cAAC,IAAMC,WAAP,UACF,cAAC,EAAD,MAEEC,SAASC,eAAe,W","file":"static/js/main.e98c91cc.chunk.js","sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react'\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\n\nfunction App() {\n    const [users, setUsers] = useState([]);\n    const [posts, setPosts] = useState([]);\n    const [comments, setComments] = useState([]);\n\n    useEffect(async () => {\n        const basicData = await fetch(\"https://jsonplaceholder.typicode.com/users\")\n        const cleanData = await basicData.json();\n        setUsers(cleanData);\n    })\n\n    const getPosts =async (evt) => {\n        const data = await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${evt.target.dataset.id}`)\n        const cleanData = await data.json();\n        setPosts(cleanData)\n    }\n\n    const getComments =async (evt) => {\n        const data =  await fetch(`https://jsonplaceholder.typicode.com/posts/${evt.target.dataset.id}/comments`)\n        const cleanData = await data.json()\n        setComments(cleanData)\n    }\n\n    return (\n        <>\n            <h1 className=\"h2 text-center mt-3\">Users API</h1>\n            <div className=\"row py-3 border border-2 border-secondary my-5\">\n\n                <div className=\"col-4\">\n                    <h2 className=\"h3 m-0\">Users</h2>\n                    <p className=\"user-count m-0 mb-2\">Count of users: </p>\n                    <ul className=\"list-unstyled\">\n                        {users.map((user) => (\n                            <li className=\"border border-info ps-2 border-2 mb-2 rounded list-unstyled\">\n                                <a className=\"user__name fw-bold fs-4\" data-id={user.id} onClick={getPosts}>{user.name}</a>\n                                <div>\n                                    <span className=\"fw-bold\">email: </span>\n                                    <a className=\"user__email\" href=\"\">{user.email}</a>\n                                </div>\n                                <div>\n                                    <span className=\"fw-bold\">country: </span>\n                                    <span className=\"user__country\">{user.address['city']}</span>\n                                </div>\n                                <div>\n                                    <span className=\"fw-bold\">company: </span>\n                                    <span className=\"user__company\">{user.company['name']}</span>\n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n\n                <div className=\"col-4 border-start border-end border-secondary border-3\">\n                    <h2 className=\"h3 m-0\">Posts</h2>\n                    <p className=\"post-count m-0 mb-2\">Select user</p>\n                    <ul className=\"js-posts-list p-0 list-unstyled\">\n                        {posts.map((post) => (\n                            <li className=\"border border-info ps-2 border-2 mb-2 rounded\">\n                                <a className=\"post__title fw-bold fs-4\" data-id={post.id} onClick={getComments}>{post.title}</a>\n                                <div>\n                                    <span className=\"fw-bold\">userId: </span>\n                                    <span className=\"post__id\">{post.userId}</span>\n                                </div>\n                                <div>\n                                    <span className=\"fw-bold\">post: </span>\n                                    <span className=\"user__post\">{post.body}</span>\n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n\n                <div className=\"col-4\">\n                    <h2 className=\"h3 m-0\">Comments</h2>\n                    <p className=\"comment-count m-0 mb-2\">Select post</p>\n                    <ul className=\"js-comments-list list-unstyled\">\n                        {comments.map((comment) => (\n                            <li className=\"border border-info ps-2 border-2 mb-2 rounded\">\n                                <div>\n                                    <span className=\"fw-bold\">title: </span>\n                                    <span className=\"comment__name\">{comment.name}</span>\n                                </div>\n                                <div>\n                                    <span className=\"fw-bold\">postId: </span>\n                                    <span>{comment.postId}</span>\n                                </div>\n                                <div>\n                                    <span className=\"fw-bold\">email: </span>\n                                    <a href=\"\">{comment.email}</a>\n                                </div>\n                                <div>\n                                    <span className=\"fw-bold\">post: </span>\n                                    <span>{comment.body}</span>\n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, Router } from 'react-router';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n<App/>  \n</React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}